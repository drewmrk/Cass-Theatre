/* Flex */
@mixin flex($direction) {
  display: flex;
  flex-direction: $direction;
}

/* Font Families */
@mixin fontFamily($family) {
  @each $familyName in 'system-ui' 'stock' 'roboto' {
    @if $family == $familyName {
      font-family: map-get($fontFamily, $familyName);
    }
  }
}

/* Font Sizes */
@mixin fontSize($size) {
  @each $sizeName in 'xs' 'sm' 'md' 'lg' 'xl' {
    @if $size == $sizeName {
      font-size: map-get($fontSize, $sizeName);
    }
  }
}

/* Paddings */
@mixin padding($size) {
  @each $sizeName in 'xs' 'sm' 'md' 'lg' 'xl' {
    @if $size == $sizeName {
      padding: map-get($padding, $sizeName);
    }
  }
}

/* Box Shadows */
@mixin boxShadow($size) {
  @each $sizeName in 'xs' 'sm' 'md' 'lg' 'xl' {
    @if $size == $sizeName {
      box-shadow: map-get($boxShadow, $sizeName);
    }
  }
}

/* Border Radii */
@mixin borderRadius($size) {
  @each $sizeName in 'xs' 'sm' 'md' 'lg' 'xl' {
    @if $size == $sizeName {
      border-radius: map-get($borderRadius, $sizeName);
    }
  }
}

/* Font Weights */
@mixin fontWeight($size) {
  @each $sizeName in 'xs' 'sm' 'md' 'lg' 'xl' {
    @if $size == $sizeName {
      font-weight: map-get($fontWeight, $sizeName);
    }
  }
}

/* Line Heights */
@mixin lineHeight($size) {
  @each $sizeName in 'xs' 'sm' 'md' 'lg' 'xl' {
    @if $size == $sizeName {
      line-height: map-get($lineHeight, $sizeName);
    }
  }
}

/* Media Queries */
@mixin mobile {
  @media (max-width: $mobile) {
    @content;
  }
}
@mixin desktop {
  @media (min-width: $desktop) {
    @content;
  }
}
